{"version":3,"sources":["component/ContactForm/ContactFormStyled.js","component/Notification/NotificationStyled.js","component/Notification/Notification.js","redux/actions/contactActions.js","component/ContactForm/ContactForm.js","redux/operations/contactOperations.js","component/ContactListItem/ContactListItem.js","component/ContactList/ContactListStyled.js","component/ContactList/ContactList.js","component/Filter/FilterStyled.js","component/Filter/Filter.js","component/App/AppStyled.js","component/App/App.js","redux/reducers/contactReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Wrapper","styled","div","NotificationStyled","Notification","notification","className","addNewContact","createAction","data","payload","id","uuidv4","setError","setLoading","deleteContact","getContacts","setFilter","initialState","name","number","connect","state","contacts","dispatch","useDispatch","isLoading","useSelector","useState","setState","setNotification","showNotification","setShowNotification","onHandleChange","event","target","value","prev","showNotificationAlert","setTimeout","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","preventDefault","some","item","length","contact","a","axios","post","process","response","type","onChange","filter","toLowerCase","includes","data-id","onClick","dataset","delete","then","error","deleteContactOperation","useEffect","get","Object","keys","map","key","localStorage","setItem","JSON","stringify","ContactListStyled","TransitionGroup","component","FilterStyled","Wraper","AppStyled","appear","contactReducer","createReducer","action","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54eb4401.chunk.js","sourcesContent":["  \r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n.title-form\r\n{\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    margin-bottom: 20px;\r\n}\r\n.input-form{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 10px 15px;\r\n    margin-top: 5px;\r\n}\r\n.button{\r\ndisplay: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 100px;\r\n    padding: 7px 10px;\r\n    background-color: blue;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n}\r\n.button:hover{\r\n    color: #fff;\r\n    background-color: black;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n`;\r\n\r\nexport default Wrapper;","import styled from \"styled-components\";\r\nconst NotificationStyled = styled.div`\r\n  position: absolute;\r\n  top: 45px;\r\n  right: 45px;\r\n  max-width: 300px;\r\n  background-color: red;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  .notification-title {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: #ffffff;\r\n  }\r\n`;\r\nexport default NotificationStyled;","import React from \"react\";\r\nimport NotificationStyled from \"../Notification/NotificationStyled\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  return (\r\n    <NotificationStyled>\r\n      <p className=\"notification-title\">{notification}</p>\r\n    </NotificationStyled>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addNewContact = createAction('@contacts/addNewContact',\r\n   (data) => ({\r\n      payload: {\r\n     ...data, id: uuidv4()\r\n }})\r\n);\r\nexport const setError = createAction(\"@contacts/setError\");\r\n\r\nexport const setLoading = createAction(\"@contacts/setLoading\");\r\n  \r\nexport const deleteContact = createAction('@contacts/deleteContact');\r\n\r\nexport const getContacts = createAction('@contacts/getContacts');\r\n\r\nexport const setFilter = createAction('@contacts/setFilter');","import React, { useState } from \"react\";\r\nimport ContFormStyled from \"../ContactForm/ContactFormStyled\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Notification from '../Notification/Notification'\r\nimport { addNewContactOperation } from \"../../redux/operations/contactOperations\";\r\n\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = ({ contacts }) => {\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector((state)=> state.isLoading)\r\n  const [state, setState] = useState({...initialState})\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  const  onHandleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState((prev) =>({ ...prev, [name]: value }));\r\n  };\r\n\r\nconst showNotificationAlert = (notification) => {\r\n   setNotification(notification);\r\n   setShowNotification(true);\r\n   setTimeout(() => {\r\n     setShowNotification(false);\r\n   }, 2000)\r\n    setTimeout(() => {\r\n     setNotification(\"\");\r\n   }, 2500)\r\n  }\r\n\r\n  \r\n  const onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n   \r\n\r\n    if (contacts.contacts.some((item) => item.name === state.name)) {\r\n      showNotificationAlert(`${state.name} is already in contacts`);\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (contacts.contacts.some((item) => item.number === state.number)) {\r\n      showNotificationAlert(`Contact with number ${state.number} is already in contacts`);\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (!state.name.length) {\r\n      showNotificationAlert(\"Please, enter a name\");\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (!state.number.length) {\r\n      showNotificationAlert(\"Please, enter a number\");\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    \r\n    dispatch(addNewContactOperation(state));\r\n    setState({ ...initialState });\r\n  };\r\n  \r\n  \r\n      return (\r\n        <ContFormStyled>\r\n            {isLoading && <h2>...Loading</h2>} \r\n        <CSSTransition in={showNotification} timeout={250} classNames=\"notification\" unmountOnExit>\r\n          <Notification notification={notification}/>\r\n          </CSSTransition>\r\n          \r\n          <form className=\"contForm\" onSubmit={onHandleSubmit}>\r\n            <label className=\"title-form\">\r\n              Name\r\n              <input type=\"text\" value={state.name} name=\"name\" onChange={onHandleChange} className=\"input-form\" />\r\n            </label>\r\n            <label className=\"title-form\">\r\n              Number\r\n              <input type=\"text\" value={state.number} name=\"number\" onChange={onHandleChange} className=\"input-form\" />\r\n            </label>\r\n            <button type=\"submit\" className=\"button\">\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </ContFormStyled>\r\n      );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactForm);","import axios from \"axios\"\r\nimport { addNewContact, deleteContact, getContacts, setError, setLoading } from \"../actions/contactActions\"\r\n\r\n\r\nconst addNewContactOperation = (contact) => async (dispatch) => {\r\n    dispatch(setLoading());\r\n    try { \r\n        const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/contacts.json`, contact)\r\n        dispatch(addNewContact({ ...contact, id: response.data.name }))\r\n    } catch (error) {\r\n        dispatch (setError(error))\r\n    } finally {\r\n        dispatch(setLoading())\r\n    }   \r\n}\r\n\r\nconst getContactOperation = () => async (dispatch) => {\r\n    dispatch(setLoading());\r\n    try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/contacts.json`)\r\n    \r\n        const contacts = Object.keys(response.data).map((key) => ({\r\n            ...response.data[key],\r\n            id: key\r\n        }));\r\n        dispatch(getContacts(contacts))\r\n    } catch (error) {\r\n        dispatch(setError(error))\r\n    } finally {\r\n        dispatch(setLoading());\r\n    }\r\n}\r\n\r\nconst deleteContactOperation = (id) => (dispatch) => {\r\n    dispatch(setLoading());\r\n    try {\r\n        axios \r\n            .delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`)\r\n            .then(()=>dispatch(deleteContact(id)))\r\n    } catch (error) {\r\n        dispatch(setError(error))\r\n    } finally {\r\n        dispatch(setLoading())\r\n    }\r\n}\r\n\r\nexport{addNewContactOperation, getContactOperation, deleteContactOperation}","import React from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { setFilter, deleteContact } from \"../../redux/actions/contactActions\";\r\nimport { deleteContactOperation } from \"../../redux/operations/contactOperations\";\r\n\r\nconst ContactListItem = ({ contact, contacts, filter }) => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const onHandleDelete = (event) => {\r\n    const { id } = event.target.dataset;\r\n    dispatch(deleteContactOperation(id))\r\n    \r\n     if (contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())).length < 2) {\r\n      setFilter('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <li className=\"contact-list__item\" key={contact.id}>\r\n        <div className=\"contact-list__item-info\">\r\n        <span className=\"contact-list__item-name\">{contact.name}:</span>\r\n        <span className=\"contact-list__item-number\">{contact.number}</span>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          data-id={contact.id}\r\n          onClick={onHandleDelete}\r\n          className=\"contact-list__item-btn\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    \r\n    contacts: state.contacts.contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n    ),\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: id => {\r\n      dispatch(deleteContact(id))\r\n    },\r\n    setFilter: (value) => {\r\n      dispatch(setFilter(value))\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n.contact{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.contact-list__item {\r\n    display: flex;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n    margin-bottom: 5px;\r\n    padding: 10px 15px;\r\n    color: black;\r\n  }\r\n  .contact-list-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .contact-list-item-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .contact-list-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list__item-ifo {\r\n    width: 320px;\r\n  }\r\n  .contact-list__item-name {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-number {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-btn {\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 70px;\r\n    padding: 2px 10px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    margin-left: 10px;\r\n  }\r\n  .contact-list__item-btn:hover {\r\n    color: #fff;\r\n    background-color: red;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n\r\nexport default Wrapper;","import React, {useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport ContactListStyled from \"../ContactList/ContactListStyled\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { getContactOperation } from \"../../redux/operations/contactOperations\";\r\n\r\nconst ContactList = ({ contacts, filter, getContacts }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getContactOperation())\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n  \r\n  return (\r\n    <ContactListStyled>\r\n      <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n        {contacts\r\n          .filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((contact) => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              timeout={250}\r\n              classNames=\"my-contact-list-item\"\r\n            >\r\n              <ContactListItem contact={contact} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    contacts: state.contacts.contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n    ),\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n  deleteContactById: PropTypes.func,\r\n}","import styled from 'styled-components';\r\nconst Wrapper = styled.div`\r\nposition: relative;\r\n.filter-title{\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n}\r\n.filter-input{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 5px 15px;\r\n    margin-top: 5px;\r\n}\r\n`;\r\n\r\nexport default Wrapper","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FilterStyled from '../Filter/FilterStyled';\r\nimport { setFilter } from \"../../redux/actions/contactActions\";\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  const onChangeFilter = event => {\r\n    const { value } = event.target;\r\n    setFilter(value)\r\n  }\r\n\r\n  return (\r\n      <FilterStyled>\r\n        <label className=\"filter-title\">\r\n          Find contact by name\r\n          <input type=\"text\" name=\"filter\" value={filter} onChange={onChangeFilter} className=\"filter-input\"\r\n          />\r\n        </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFilter: value => {\r\n      dispatch(setFilter(value))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styled from 'styled-components';\r\n\r\nconst Wraper = styled.div`\r\ndisplay: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  overflow: hidden;\r\n  padding: 50px;\r\n  width: 432px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n.phonebook-appear{\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n}\r\n.phonebook-appear-active{\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms linear;\r\n}\r\n.phbook-title{\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n}\r\n.contacts-title{\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    margin-bottom: 20px;\r\n}\r\n .notification-enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  .notification-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .notification-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .notification-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: all 250ms;\r\n  }\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%) translateY(-100%);\r\n  }\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0) translateY(0);\r\n    transition: all 250ms linear;\r\n  }\r\n  .my-filter-exit {\r\n    opacity: 1;\r\n  }\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%) translateY(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n  `;\r\nexport default Wraper;","import React from 'react';\r\n\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport AppStyled from '../App/AppStyled';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({contacts}) => {\r\n \r\n    return (\r\n        <AppStyled>\r\n            \r\n        <CSSTransition in={true} timeout={500} appear={true} classNames=\"phonebook\">\r\n            <h2 className=\"phbook-title\">PhoneBook</h2>\r\n        </CSSTransition>\r\n            \r\n            <ContactForm />\r\n            \r\n            <h2 className=\"contacts-title\">Contacts</h2>\r\n            \r\n        <CSSTransition in={contacts.length > 1} timeout={250} appear={true} classNames=\"filter\" unmountOnExit>\r\n            <Filter />\r\n        </CSSTransition>\r\n            \r\n        <ContactList />\r\n      </AppStyled>\r\n    );\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.contacts,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewContact, deleteContact, setFilter, getContacts, setLoading, setError } from \"../actions/contactActions\";\r\n\r\nconst initialState = {\r\n    contacts: [],\r\n    filter: \"\", \r\n    isLoading: false,\r\n    error: \"\",\r\n    \r\n}\r\n\r\nconst onAddNewContact = (state, action) => ({\r\n    ...state,\r\n    contacts: [...state.contacts, action.payload]\r\n})\r\n\r\nconst onDeleteContact = (state, action) => ({\r\n    ...state,\r\n    contacts: [...state.contacts.filter(item => item.id !== action.payload)]\r\n})\r\n\r\nconst onSetFilter = (state, action) => ({\r\n    ...state,\r\n    filter: action.payload,\r\n})\r\n\r\n\r\nconst onGetContacts = (state, action) => ({\r\n    ...state,\r\n    contacts: [...action.payload]\r\n})\r\n\r\nconst onSetLoading = (state, action) => ({\r\n    ...state, \r\n    isLoading: !state.isLoading\r\n})\r\n\r\nconst onSetError = (state, action) => ({\r\n    ...state,\r\n    error: action.payload\r\n})\r\n\r\nconst contactReducer = createReducer({ ...initialState },\r\n    {\r\n  \r\n    [addNewContact]: onAddNewContact,\r\n    [deleteContact]: onDeleteContact,\r\n    [setFilter]: onSetFilter,\r\n    [getContacts]: onGetContacts,\r\n    [setLoading]: onSetLoading,\r\n    [setError]: onSetError,\r\n\r\n})\r\n\r\nexport default contactReducer;","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactReducer,\r\n})\r\n\r\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\n export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}